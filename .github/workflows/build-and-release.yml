name: Build and Release Go Application

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Check out code
      uses: actions/checkout@v4

    - name: Build for Linux
      run: GOOS=linux GOARCH=amd64 go build -o gosh-linux-amd64

    - name: Build for macOS
      run: GOOS=darwin GOARCH=amd64 go build -o gosh-darwin-amd64

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: binaries
        path: |
          gosh-linux-amd64
          gosh-darwin-amd64

  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: binaries

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Linux Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./gosh-linux-amd64
          asset_name: gosh-linux-amd64
          asset_content_type: application/octet-stream
      - name: Upload macOS Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./gosh-darwin-amd64
          asset_name: gosh-darwin-amd64
          asset_content_type: application/octet-stream
